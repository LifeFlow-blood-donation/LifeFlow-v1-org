{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sithila/Documents/LifeFlow/frontend/app/components/DonorRegistration.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport {\r\n  Mail,\r\n  Lock,\r\n  Heart,\r\n  User,\r\n  Droplet,\r\n  Phone,\r\n  Eye,\r\n  EyeOff,\r\n  Sun,\r\n  Moon,\r\n  Loader2,\r\n} from \"lucide-react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst DonerRegistration = () => {\r\n  const router = useRouter();\r\n  // const [fname, setFname] = useState(\"\");\r\n  // const [lname, setLname] = useState(\"\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [contact, setContact] = useState(\"\");\r\n  const [focusedInput, setFocusedInput] = useState(\"\");\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordErrors, setPasswordErrors] = useState({\r\n    length: false,\r\n    number: false,\r\n    uppercase: false,\r\n    lowercase: false,\r\n    special: false,\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phoneNumber: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [apiError, setApiError] = useState(\"\");\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.6,\r\n        when: \"beforeChildren\",\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  };\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, x: -20 },\r\n    visible: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: { duration: 0.5 },\r\n    },\r\n  };\r\n\r\n  const validateEmail = (email: string) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!email) {\r\n      setEmailError(\"Email is required\");\r\n    } else if (!emailRegex.test(email)) {\r\n      setEmailError(\"Please enter a valid email address\");\r\n    } else {\r\n      setEmailError(\"\");\r\n    }\r\n  };\r\n\r\n  interface PasswordCriteriaProps {\r\n    met: boolean;\r\n    text: string;\r\n  }\r\n\r\n  // Define interface for password errors\r\n  interface PasswordErrors {\r\n    length: boolean;\r\n    number: boolean;\r\n    uppercase: boolean;\r\n    lowercase: boolean;\r\n    special: boolean;\r\n  }\r\n\r\n  // Password validation\r\n  const validatePassword = (password: string) => {\r\n    setPasswordErrors({\r\n      length: password.length >= 8 && password.length <= 12,\r\n      number: /\\d/.test(password),\r\n      uppercase: /[A-Z]/.test(password),\r\n      lowercase: /[a-z]/.test(password),\r\n      special: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formData.email) validateEmail(formData.email);\r\n  }, [formData.email]);\r\n\r\n  useEffect(() => {\r\n    if (formData.password) validatePassword(formData.password);\r\n  }, [formData.password]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setApiError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/users/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!response.ok) throw new Error(data.message);\r\n\r\n      // Redirect to OTP verification page\r\n      router.push(`/verify-email?email=${formData.email}`);\r\n    } catch (error) {\r\n      setApiError(\r\n        error instanceof Error ? error.message : \"Registration failed\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"phoneNumber\" && !/^\\d*$/.test(value)) return;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n\r\n    if (apiError) setApiError(\"\");\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const PasswordCriteria: React.FC<PasswordCriteriaProps> = ({ met, text }) => (\r\n    <div className=\"flex items-center gap-2\">\r\n      <div\r\n        className={`w-2 h-2 rounded-full ${\r\n          met ? \"bg-green-500\" : \"bg-red-500\"\r\n        }`}\r\n      />\r\n      <span\r\n        className={`text-sm ${isDarkMode ? \"text-gray-300\" : \"text-gray-600\"}`}\r\n      >\r\n        {text}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <motion.div\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      variants={containerVariants}\r\n      className={`h-screen w-screen ${\r\n        isDarkMode\r\n          ? \"bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900\"\r\n          : \"bg-gradient-to-br from-red-50 via-white to-red-50\"\r\n      } flex flex-col justify-center py-12 sm:px-6 lg:px-8`}\r\n    >\r\n      {/* Dark Mode Toggle */}\r\n      <motion.button\r\n        onClick={toggleDarkMode}\r\n        className=\"fixed top-4 right-4 p-2 rounded-full bg-white/80 backdrop-blur-sm shadow-lg hover:bg-gray-100 transition-colors duration-200\"\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n      >\r\n        {isDarkMode ? (\r\n          <Sun className=\"h-6 w-6 text-yellow-500\" />\r\n        ) : (\r\n          <Moon className=\"h-6 w-6 text-gray-800\" />\r\n        )}\r\n      </motion.button>\r\n\r\n      <motion.div\r\n        className=\"sm:mx-auto sm:w-full sm:max-w-md\"\r\n        variants={itemVariants}\r\n      >\r\n        <motion.div\r\n          className=\"flex justify-center\"\r\n          whileHover={{ scale: 1.1, rotate: 360 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <Heart\r\n            className={`w-16 h-16 ${\r\n              isDarkMode ? \"text-red-600\" : \"text-red-500\"\r\n            } drop-shadow-lg`}\r\n          />\r\n        </motion.div>\r\n        <motion.h2\r\n          variants={itemVariants}\r\n          className={`mt-6 text-center text-4xl font-bold ${\r\n            isDarkMode ? \"text-white\" : \"text-gray-900\"\r\n          } drop-shadow-sm`}\r\n        >\r\n          Donor Registration\r\n        </motion.h2>\r\n        <motion.p\r\n          variants={itemVariants}\r\n          className={`mt-2 text-center text-lg ${\r\n            isDarkMode ? \"text-gray-300\" : \"text-gray-600\"\r\n          }`}\r\n        >\r\n          Become a life saver today\r\n        </motion.p>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        variants={containerVariants}\r\n        className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\"\r\n      >\r\n        <motion.div\r\n          variants={itemVariants}\r\n          className={`${\r\n            isDarkMode ? \"bg-gray-800/80\" : \"bg-white/80\"\r\n          } backdrop-blur-sm py-8 px-4 shadow-2xl sm:rounded-2xl sm:px-10`}\r\n        >\r\n          {apiError && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: -10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"mb-4 p-3 rounded-lg bg-red-50 border border-red-200 text-red-600\"\r\n            >\r\n              {apiError}\r\n            </motion.div>\r\n          )}\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            {/* First Name */}\r\n            <motion.div variants={itemVariants}>\r\n              <label\r\n                htmlFor=\"fname\"\r\n                className={`block text-sm font-medium ${\r\n                  isDarkMode ? \"text-gray-300\" : \"text-gray-700\"\r\n                }`}\r\n              >\r\n                First Name\r\n              </label>\r\n              <motion.div\r\n                className={`mt-1 relative rounded-lg shadow-sm overflow-hidden ${\r\n                  focusedInput === \"fname\"\r\n                    ? \"ring-2 ring-red-500 ring-opacity-50\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <User className=\"h-5 w-5 text-gray-400 \" />\r\n                </div>\r\n                <input\r\n                  id=\"fname\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={formData.firstName}\r\n                  onChange={handleChange}\r\n                  onFocus={() => setFocusedInput(\"fname\")}\r\n                  onBlur={() => setFocusedInput(\"\")}\r\n                  className={`block w-full pl-10 pr-3 py-3 ${\r\n                    isDarkMode\r\n                      ? \"bg-gray-700 text-white\"\r\n                      : \"bg-white text-gray-900\"\r\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-200`}\r\n                  placeholder=\"Enter your First name\"\r\n                  required\r\n                />\r\n              </motion.div>\r\n            </motion.div>\r\n\r\n            {/* Last Name */}\r\n            <motion.div variants={itemVariants}>\r\n              <label\r\n                htmlFor=\"lname\"\r\n                className={`block text-sm font-medium ${\r\n                  isDarkMode ? \"text-gray-300\" : \"text-gray-700\"\r\n                }`}\r\n              >\r\n                Last Name\r\n              </label>\r\n              <motion.div\r\n                className={`mt-1 relative rounded-lg shadow-sm overflow-hidden ${\r\n                  focusedInput === \"lname\"\r\n                    ? \"ring-2 ring-red-500 ring-opacity-50\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <User className=\"h-5 w-5 text-gray-400 \" />\r\n                </div>\r\n                <input\r\n                  id=\"lname\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  value={formData.lastName}\r\n                  onChange={handleChange}\r\n                  onFocus={() => setFocusedInput(\"lname\")}\r\n                  onBlur={() => setFocusedInput(\"\")}\r\n                  className={`block w-full pl-10 pr-3 py-3 ${\r\n                    isDarkMode\r\n                      ? \"bg-gray-700 text-white\"\r\n                      : \"bg-white text-gray-900\"\r\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-200`}\r\n                  placeholder=\"Enter your Last name\"\r\n                  required\r\n                />\r\n              </motion.div>\r\n            </motion.div>\r\n\r\n            {/* Email */}\r\n            <motion.div variants={itemVariants}>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className={`block text-sm font-medium ${\r\n                  isDarkMode ? \"text-gray-300\" : \"text-gray-700\"\r\n                }`}\r\n              >\r\n                Email address\r\n              </label>\r\n              <motion.div\r\n                className={`mt-1 relative rounded-lg shadow-sm overflow-hidden ${\r\n                  focusedInput === \"email\"\r\n                    ? \"ring-2 ring-red-500 ring-opacity-50\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Mail className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                  onFocus={() => setFocusedInput(\"email\")}\r\n                  onBlur={() => setFocusedInput(\"\")}\r\n                  className={`block w-full pl-10 pr-3 py-3 ${\r\n                    isDarkMode\r\n                      ? \"bg-gray-700 text-white\"\r\n                      : \"bg-white text-gray-900\"\r\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-200`}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                />\r\n              </motion.div>\r\n              {emailError && (\r\n                <p className=\"mt-1 text-sm text-red-500\">{emailError}</p>\r\n              )}\r\n            </motion.div>\r\n\r\n            {/* Password */}\r\n            <motion.div variants={itemVariants}>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className={`block text-sm font-medium ${\r\n                  isDarkMode ? \"text-gray-300\" : \"text-gray-700\"\r\n                }`}\r\n              >\r\n                Password\r\n              </label>\r\n              <motion.div\r\n                className={`mt-1 relative rounded-lg shadow-sm overflow-hidden ${\r\n                  focusedInput === \"password\"\r\n                    ? \"ring-2 ring-red-500 ring-opacity-50\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={formData.password}\r\n                  onChange={(e) => {\r\n                    handleChange(e); // Properly invoke handleChange\r\n                    validatePassword(e.target.value); // Validate the password\r\n                  }}\r\n                  onFocus={() => setFocusedInput(\"password\")}\r\n                  onBlur={() => setFocusedInput(\"\")}\r\n                  className={`block w-full pl-10 pr-12 py-3 ${\r\n                    isDarkMode\r\n                      ? \"bg-gray-700 text-white\"\r\n                      : \"bg-white text-gray-900\"\r\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-200`}\r\n                  placeholder=\"Create a password\"\r\n                  required\r\n                  minLength={6}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                >\r\n                  {showPassword ? (\r\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\r\n                  ) : (\r\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\r\n                  )}\r\n                </button>\r\n              </motion.div>\r\n\r\n              {/* Password validation criteria */}\r\n              {(focusedInput === \"password\" || formData.password) && (\r\n                <div className=\"mt-2 space-y-2\">\r\n                  <PasswordCriteria\r\n                    met={passwordErrors.length}\r\n                    text=\"8-12 characters long\"\r\n                  />\r\n                  <PasswordCriteria\r\n                    met={passwordErrors.number}\r\n                    text=\"Contains a number\"\r\n                  />\r\n                  <PasswordCriteria\r\n                    met={passwordErrors.uppercase}\r\n                    text=\"Contains an uppercase letter\"\r\n                  />\r\n                  <PasswordCriteria\r\n                    met={passwordErrors.lowercase}\r\n                    text=\"Contains a lowercase letter\"\r\n                  />\r\n                  <PasswordCriteria\r\n                    met={passwordErrors.special}\r\n                    text=\"Contains a special character\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </motion.div>\r\n\r\n            {/* Contact Number */}\r\n            <motion.div variants={itemVariants}>\r\n              <label\r\n                htmlFor=\"contact\"\r\n                className={`block text-sm font-medium ${\r\n                  isDarkMode ? \"text-gray-300\" : \"text-gray-700\"\r\n                }`}\r\n              >\r\n                Contact Number\r\n              </label>\r\n              <motion.div\r\n                className={`mt-1 relative rounded-lg shadow-sm overflow-hidden ${\r\n                  focusedInput === \"contact\"\r\n                    ? \"ring-2 ring-red-500 ring-opacity-50\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Phone className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  id=\"contact\"\r\n                  name=\"phoneNumber\"\r\n                  type=\"tel\"\r\n                  value={formData.phoneNumber}\r\n                  onChange={handleChange}\r\n                  pattern=\"[0-9]*\"\r\n                  inputMode=\"numeric\"\r\n                  onFocus={() => setFocusedInput(\"contact\")}\r\n                  onBlur={() => setFocusedInput(\"\")}\r\n                  className={`block w-full pl-10 pr-3 py-3 ${\r\n                    isDarkMode\r\n                      ? \"bg-gray-700 text-white\"\r\n                      : \"bg-white text-gray-900\"\r\n                  } rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 transition-all duration-200`}\r\n                  placeholder=\"Enter contact number\"\r\n                  required\r\n                />\r\n              </motion.div>\r\n            </motion.div>\r\n\r\n            {/* Submit Button */}\r\n            <motion.div variants={itemVariants}>\r\n              <motion.button\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className={`w-full py-3 px-4 rounded-lg shadow-sm text-sm font-medium text-white ${\r\n                  isDarkMode\r\n                    ? \"bg-gradient-to-r from-red-700 to-red-600\"\r\n                    : \"bg-gradient-to-r from-red-600 to-red-500\"\r\n                } hover:from-red-700 hover:to-red-600 transition-all duration-200 \r\n    disabled:opacity-50 disabled:cursor-not-allowed`}\r\n              >\r\n                {loading ? (\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <Loader2 className=\"w-5 h-5 animate-spin mr-2\" />\r\n                    Registering...\r\n                  </div>\r\n                ) : (\r\n                  \"Register Now\"\r\n                )}\r\n              </motion.button>\r\n            </motion.div>\r\n          </form>\r\n\r\n          {/* Login Prompt */}\r\n          <motion.div className=\"mt-6 text-center\">\r\n            <p\r\n              className={`text-sm ${\r\n                isDarkMode ? \"text-gray-300\" : \"text-gray-600\"\r\n              }`}\r\n            >\r\n              Already have an account?{\" \"}\r\n              <motion.a\r\n                href=\"/login\"\r\n                className={`font-medium ${\r\n                  isDarkMode ? \"text-red-400\" : \"text-red-600\"\r\n                } hover:text-red-500 transition-colors duration-200`}\r\n                whileHover={{ scale: 1.05 }}\r\n              >\r\n                Sign in here\r\n              </motion.a>\r\n            </p>\r\n          </motion.div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default DonerRegistration;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 773, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sithila/Documents/LifeFlow/frontend/app/donor-registration/page.tsx"],"sourcesContent":["\"use client\"; // Add this if you're using React hooks or client-side features\r\nimport DonorRegistration from \"../components/DonorRegistration\";\r\n\r\nexport default function DonorRegisterPage() {\r\n  return <DonorRegistration />;\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA,cAAc,+DAA+D;;;AAG9D,SAAS;IACtB,qBAAO,6LAAC,0IAAA,CAAA,UAAiB;;;;;AAC3B;KAFwB"}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}